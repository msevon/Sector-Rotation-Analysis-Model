Sector Rotation Analysis Model

Introduction

Sector rotation is a financial strategy that involves shifting investments between different sectors or industries of the stock market to take advantage of changing economic conditions. This project aims to analyze sector rotation based on historical stock price data. It combines Python for data collection, C for efficient moving average calculation, and R for strategy implementation and visualization.

Project Structure

The project is organized into several components:

historical_data.py:

This Python script downloads historical stock price data for a list of sector ETFs (Technology, Healthcare, Finance) from Yahoo Finance using the yfinance library.
It defines the start and end dates for the data and creates an empty DataFrame to store the data.
For each symbol (ETF), it downloads historical price data, adds a column for the symbol, and appends the data to the main DataFrame.
Finally, it saves the downloaded data to a CSV file named "historical_stock_data.csv."

moving_average.c:

This is a C source code file that contains a function called calculateMovingAverage.
The function calculates the moving average for a given array of data points. It takes the data, the size of the data, the moving average period, and an array to store the results as arguments.
The function iterates through the data and calculates the moving average for each point, storing the results in the provided array.

allocation_strategy.r:

This R script defines allocation strategies as functions.
Each strategy function takes data and sector names as input and implements a different allocation strategy logic. For example, strategy1 selects the sector with the highest moving average.
There's also a compare_allocation_strategies function that compares these strategies based on a specified metric (default is "return") and returns the best-performing strategy.

model.r:

This R script is the main driver of the project.
It starts by checking if the shared library "moving_average.so" exists. If not, it compiles the C code "moving_average.c" to create the shared library using the GCC compiler.
It loads the necessary R libraries, such as quantmod and ggplot2.
The historical stock price data is loaded from the CSV file generated by "historical_data.py."
Moving averages are calculated for each sector ETF using the C code within a loop.
Allocation strategies are defined and stored in a list.
The compare_allocation_strategies function is used to find the best allocation strategy based on the specified metric (default is "return").
The best strategy is applied to the moving averages data.
Finally, it creates a line plot using ggplot to visualize sector rotation.

How to Run the Program

To run the sector rotation analysis program, follow these steps:

1. Ensure you have the required libraries and tools installed:

Python with yfinance library for data collection.
R with quantmod and ggplot2 libraries for analysis and visualization.
GCC compiler for C code compilation.

2. Open a terminal or command prompt and navigate to the project directory.

3. Run the following commands in sequence:

Compile the C code to create the shared library (if it's not already compiled):
gcc -shared -o moving_average.so -fPIC moving_average.c

Run the main R script to perform the analysis:
Rscript model.r

4. The program will download historical stock price data, calculate moving averages, evaluate different allocation strategies, and visualize sector rotation.

5. The results and visualizations will be displayed in the R graphics window or saved to files depending on your R environment configuration.

6. Explore the generated plots and analysis to gain insights into sector rotation strategies based on historical data.
